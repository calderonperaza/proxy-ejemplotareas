#localhost puerto 80 solo de prueba
server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }    
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }    
}

#esaapp.com puerto 80 redirecciona a https
server {
    server_name esaapp.com;
    listen 80;
    listen [::]:80;

    server_tokens off;
    #para que cerbot pueda verificar el dominio
    location /.well-known/acme-challenge/ {
        	root /var/www/certbot;
    }

    location / {
        return 301 https://esaapp.com$request_uri;
    }


}
#esaapp.com con SSL puerto 443 uso host.docker.internal para referirme al host de docker
#esaapp corre en el puerto 8081 es un contenedor aparte.
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name esaapp.com;

    ssl_certificate /etc/nginx/ssl/live/esaapp.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/esaapp.com/privkey.pem;
    location / {
        proxy_pass http://host.docker.internal:8081;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

#couchdbbackend.esaapp.com
server {
    server_name couchdbbackend.esaapp.com;
    listen 80;
    listen [::]:80;
    server_tokens off;
    #para que cerbot pueda verificar el dominio
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://couchdbbackend.esaapp.com$request_uri;
    }

}


server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name couchdbbackend.esaapp.com;

    ssl_certificate /etc/nginx/ssl/live/couchdbbackend.esaapp.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/couchdbbackend.esaapp.com/privkey.pem;
    location / {
        proxy_pass http://host.docker.internal:5984;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}
